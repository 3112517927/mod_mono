AC_INIT(src/mod_mono.c)
AM_INIT_AUTOMAKE(mod_mono, 1.0)
AM_CONFIG_HEADER(include/mod_mono_config.h:config.in)

AC_PROG_CC
AM_PROG_LIBTOOL

AC_MSG_CHECKING([if building mod_mono_old is requested])
AC_ARG_ENABLE(old-module,
	[  --enable-old-module     enables compilation of the mod_mono_old module],
	enable_old_module=$enableval, enable_old_module=no)
AC_MSG_RESULT($enable_old_module)

# check for --with-apxs
AC_MSG_CHECKING(for --with-apxs)
AC_ARG_WITH(apxs, [  --with-apxs=PATH        Path to apxs],
[
  if test -x "$withval"
  then
    AC_MSG_RESULT([$withval executable, good])
    APXS=$withval
  else
    echo
    AC_MSG_ERROR([$withval not found or not executable])
  fi
],
AC_MSG_RESULT(no))

# check for --with-apr-config
# apr-config - at least in debian apr include directory is different
APR_INCLUDES=""
AC_MSG_CHECKING(for --with-apr-config)
AC_ARG_WITH(apr-config,
[  --with-apr-config=PATH  Path to apr-config (apache 2.0). You may use
                          this option when apr-config is not in the same
			  directory as apxs and the output of
			  'apr-config --includes' is different from
			  'apxs -q INCLUDEDIR'.
],
[
  if test -x "$withval"
  then
    AC_MSG_RESULT([$withval executable, good])
    APRCONFIG=$withval
  else
    if test "xno" = "x$withval" ; then
    	AC_MSG_RESULT([no])
    else
        AC_MSG_ERROR([$withval not found or not executable])
    fi
  fi
],
AC_MSG_RESULT(not specified))

# if no apxs found yet, check /usr/local/apache/sbin
# since it's the default Apache location
if test -z "$APXS"; then
  AC_MSG_CHECKING(for apxs2 in /usr/local/apache/sbin)
  if test -x /usr/local/apache/sbin/apxs2; then
    APXS=/usr/local/apache/sbin/apxs2
    AC_MSG_RESULT([found, we'll use this. Use --with-apxs to specify another.])    
  else
    AC_MSG_RESULT(no)
  fi
fi

if test -z "$APXS"; then
  AC_MSG_CHECKING(for apxs in /usr/local/apache/sbin)
  if test -x /usr/local/apache/sbin/apxs; then
    APXS=/usr/local/apache/sbin/apxs
    AC_MSG_RESULT([found, we'll use this. Use --with-apxs to specify another.])    
  else
    AC_MSG_RESULT(no)
  fi
else
  if test -z "$APRCONFIG" ; then
    APRCONFIG=`dirname ${APXS}`/apr-config
  fi
fi

if test -z "$APRCONFIG"; then
  AC_MSG_CHECKING(for apr-config in /usr/local/apache/sbin)
  if test -x /usr/local/apache/sbin/apr-config; then
    APRCONFIG=/usr/local/apache/sbin/apr-config
    AC_MSG_RESULT([found, we'll use this. Use --with-apr-config to specify another.])    
  else
    AC_MSG_RESULT(no)
    APRCONFIG=""
  fi
fi

if test -z "$APXS"; then
  AC_MSG_CHECKING(for apxs2 in /usr/local/apache2/bin)
  if test -x /usr/local/apache/bin/apxs2; then
    APXS=/usr/local/apache/bin/apxs2
    AC_MSG_RESULT([found, we'll use this. Use --with-apxs to specify another.])    
  else
    AC_MSG_RESULT(no)
  fi
fi

if test -z "$APXS"; then
  AC_MSG_CHECKING(for apxs in /usr/local/apache2/bin)
  if test -x /usr/local/apache2/bin/apxs; then
    APXS=/usr/local/apache2/bin/apxs
    AC_MSG_RESULT([found, we'll use this. Use --with-apxs to specify another.])
  else
    AC_MSG_RESULT(no)
  fi
fi

if test -z "$APRCONFIG"; then
  AC_MSG_CHECKING(for apr-config in /usr/local/apache2/bin)
  if test -x /usr/local/apache2/bin/apr-config; then
    APRCONFIG=/usr/local/apache2/bin/apr-config
    AC_MSG_RESULT([found, we'll use this. Use --with-apr-config to specify another.])
  else
    AC_MSG_RESULT(no)
    APRCONFIG=""
  fi
fi

if test -z "$APXS"; then
  AC_MSG_CHECKING(for apxs2 in /usr/sbin)
  if test -x /usr/sbin/apxs2; then
    APXS=/usr/sbin/apxs2
    AC_MSG_RESULT([found, we'll use this. Use --with-apxs to specify another.])    
  else
    AC_MSG_RESULT(no)
  fi
fi

if test -z "$APXS"; then
  AC_MSG_CHECKING(for apxs in /usr/sbin)
  if test -x /usr/sbin/apxs; then
    APXS=/usr/sbin/apxs
    AC_MSG_RESULT([found, we'll use this. Use --with-apxs to specify another.])
  else
    AC_MSG_RESULT(no)
  fi
fi

if test -z "$APRCONFIG"; then
  AC_MSG_CHECKING(for apr-config in /usr/sbin)
  if test -x /usr/sbin/apr-config; then
    APRCONFIG=/usr/sbin/apr-config
    AC_MSG_RESULT([found, we'll use this. Use --with-apr-config to specify another.])
  else
    AC_MSG_RESULT(no)
    APRCONFIG=""
  fi
fi

# last resort
if test -z "$APXS"; then
  AC_PATH_PROG(APXS, apxs2)
fi

if test -z "$APXS"; then
  AC_PATH_PROG(APXS, apxs)
fi

if test -z "$APXS"; then
  AC_MSG_ERROR([**** apxs was not found, DSO compilation will not be available.])
fi

if test -z "$APRCONFIG"; then
  AC_PATH_PROG(APRCONFIG, apr-config)
fi

# determine LIBEXEC
AC_MSG_CHECKING(for Apache libexec directory)
APXS_LIBEXECDIR=`${APXS} -q LIBEXECDIR`
AC_MSG_RESULT($APXS_LIBEXECDIR)

# determine INCLUDES

AC_MSG_CHECKING([for Apache include directory])
AP_INCLUDES="-I`${APXS} -q INCLUDEDIR`"
AC_MSG_RESULT($AP_INCLUDES)
CFLAGS="$CFLAGS $AP_INCLUDES"

AC_MSG_CHECKING([Apache version])
AC_TRY_COMPILE([
	#include <httpd.h>
], [
	char *version = AP_SERVER_BASEREVISION;
], [
	APACHE_VER=2.0
], [
	APACHE_VER=1.3
])

# ensure we have apache 1.3
if test "$APACHE_VER" = "1.3" ; then
	AC_TRY_COMPILE([
		#include <httpd.h>
	], [
		char *version = SERVER_BASEREVISION;
	], [
		APACHE_VER=1.3
	], [
		APACHE_VER=retry
	])
fi

# Try apr-config
if test "$APACHE_VER" = "retry" -a -x "$APRCONFIG"; then
	CFLAGS="$CFLAGS `$APRCONFIG --includes`"
	AC_TRY_COMPILE([
		#include <apr.h>
	], [
		apr_byte_t b;
	], [
		APACHE_VER=2.0
	], [
		APACHE_VER=1.3
	])
fi

if test "$APACHE_VER" = "retry"; then
	AC_MSG_ERROR([Confused on apache version. Please report this and send config.log])
fi

if test "$APACHE_VER" = "1.3"; then
	CFLAGS="$CFLAGS -DAPACHE13 -DEAPI"
fi

AC_MSG_RESULT($APACHE_VER)


AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" = "xno"; then
        AC_MSG_ERROR([You need to install pkg-config])
fi

PKG_PATH=
AC_ARG_WITH(crosspkgdir, [  --with-crosspkgdir=/path/to/pkg-config/dir],
        if test x$with_crosspkgdir = "x"; then
                if test -s $PKG_CONFIG_PATH; then
                        PKG_PATH=$PKG_CONFIG_PATH
                fi
        else
                PKG_PATH=$with_crosspkgdir
                PKG_CONFIG_PATH=$PKG_PATH
                export PKG_CONFIG_PATH
        fi
)

dnl Check for mono.pc if building mod_mono_old is requested
MONO_CFLAGS=""
MONO_LIBS=""
if test "yes" = "$enable_old_module" ; then
	MONO_REQUIRED_VERSION=0.28.99
	PKG_CHECK_MODULES(MONO,
			  mono >= $MONO_REQUIRED_VERSION,
			  enable_old_module="yes",
			  enable_old_module="no")

	if test "$enable_old_module" = "no" ; then
		AC_MSG_ERROR([Building old module requested but no mono.pc found. $MONO_PKG_ERRORS])
	fi
fi

AM_CONDITIONAL(BUILD_OLD_MODULE, test "yes" = "$enable_old_module")
AM_CONDITIONAL(APACHE2, test "$APACHE_VER" = "2.0")
if test "$APACHE_VER" = "2.0" ; then
dnl Sources are recompiled if we change the target version
	AC_DEFINE([APACHE2],,[Compiling for Apache 2.0])
fi

AC_C_BIGENDIAN
AC_CHECK_FUNCS([setenv putenv ])

MONO_PREFIX=`$PKG_CONFIG --silence-errors --variable=prefix mono`
if test x$MONO_PREFIX = "x" ; then
	MONO_PREFIX=$prefix
fi
AC_MSG_CHECKING([for mono installation prefix])
AC_ARG_WITH(mono-prefix,
[  --with-mono-prefix=PATH  The prefix where mono is installed. It's used
                            to set the default paths for mod-mono-server.exe
			    and mono when the modules is installed in a
			    different prefix. Configuration directives can
			    override this.
],
        if test ! x$with_mono_prefix = "x" ; then
		if test ! -d "$with_mono_prefix" ; then
			AC_MSG_ERROR([Directory '$with_mono_prefix' not found])
		fi
		MONO_PREFIX=$with_mono_prefix
        fi
)

if test "$MONO_PREFIX" = NONE ; then
	MONO_PREFIX=$ac_default_prefix
fi
AC_MSG_RESULT($MONO_PREFIX)
AC_DEFINE_UNQUOTED([MONO_PREFIX],"$MONO_PREFIX",[Mono installation prefix])


AC_SUBST(APXS_LIBEXECDIR)
AC_SUBST(APXS)
AC_SUBST(AP_INCLUDES)
AC_SUBST(CFLAGS)
AC_SUBST(MONO_CFLAGS)
AC_SUBST(MONO_LIBS)
AC_SUBST(MONO_PREFIX)

AC_OUTPUT(
Makefile
src/Makefile
man/mod_mono.8
man/Makefile
)

echo "---"
echo "Configuration summary for mod_mono"
echo ""
echo "   * Installation prefix = $prefix"
echo "   * Apache version = $APACHE_VER"
echo "   * Apache modules directory = $APXS_LIBEXECDIR"
test -x "$APXS" && \
echo "   * apxs = $APXS"
test "$APACHE_VER" = "2.0" -a -x "$APRCONFIG" && \
echo "   * apr-config = $APRCONFIG"
echo "   * mono prefix = $MONO_PREFIX"
echo "   * Build old module: $enable_old_module"
echo ""
echo "---"

